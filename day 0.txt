from collections import defaultdict

def group_anagrams(words):
    res = defaultdict(list)
    for word in words:
        res[tuple(sorted(word))].append(word)
    return list(res.values())
==============================
def length_of_longest_substring(s):
    seen = {}
    start = max_len = 0
    for i, char in enumerate(s):
        if char in seen and seen[char] >= start:
            start = seen[char] + 1
        seen[char] = i
        max_len = max(max_len, i - start + 1)
    return max_len
==============================
def is_isomorphic(s, t):
    return len(set(zip(s, t))) == len(set(s)) == len(set(t))
=================================
def diagonal_sum(matrix):
    n = len(matrix)
    total = 0
    for i in range(n):
        total += matrix[i][i]
        if i != n - 1 - i:
            total += matrix[i][n - 1 - i]
    return total
